syntax = "proto3";

package rpc;

// RCP 请求协议（封装所有RPC调用请求数据）
message RpcRequestProto {
    // 请求id
    uint64 request_id = 1;
    // 服务名
    string service_name = 2;
    // 方法名
    string method_name = 3;
    // 客户端ID
    string client_id = 4;
    // 请求数据（序列化后的Message）
    bytes request_data = 5;
    // 超时时间
    int32 timeout_ms = 6;
    // 元数据（可扩展数据）
    map<string, string> metadata = 7;
}

// RPC 响应协议（封装所有RPC响应结果）
message RpcResponseProto {
    // 请求ID
    uint64 request_id = 1;
    // 是否成功
    bool success = 2;
    // 响应数据
    bytes response_data = 3;
    // 错误码
    int32 error_code = 4;
    // 错误消息
    string error_message = 5;
    // 元数据
    map<string, string> metadata = 6;
}

// RPC错误码枚举
enum RpcErrorCode {
    SUCCESS = 0;                    // 成功
    SERVICE_NOT_FOUND = 1;          // 服务未找到
    METHOD_NOT_FOUND = 2;           // 方法未找到
    INVALID_REQUEST = 3;            // 无效请求
    SERIALIZATION_ERROR = 4;        // 序列化错误
    DESERIALIZATION_ERROR = 5;      // 反序列化错误
    TIMEOUT = 6;                    // 超时
    NETWORK_ERROR = 7;              // 网络错误
    SERVER_ERROR = 8;               // 服务器内部错误
    UNKNOWN_ERROR = 99;             // 未知错误
}